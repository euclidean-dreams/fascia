// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_PITCHMETHOD_IMPRESARIOSERIALIZATION_H_
#define FLATBUFFERS_GENERATED_PITCHMETHOD_IMPRESARIOSERIALIZATION_H_

#include "flatbuffers/flatbuffers.h"

namespace ImpresarioSerialization {

enum class PitchMethod : int8_t {
  schmitt = 0,
  fcomb = 1,
  mcomb = 2,
  yin = 3,
  yinfast = 4,
  yinfft = 5,
  MIN = schmitt,
  MAX = yinfft
};

inline const PitchMethod (&EnumValuesPitchMethod())[6] {
  static const PitchMethod values[] = {
    PitchMethod::schmitt,
    PitchMethod::fcomb,
    PitchMethod::mcomb,
    PitchMethod::yin,
    PitchMethod::yinfast,
    PitchMethod::yinfft
  };
  return values;
}

inline const char * const *EnumNamesPitchMethod() {
  static const char * const names[7] = {
    "schmitt",
    "fcomb",
    "mcomb",
    "yin",
    "yinfast",
    "yinfft",
    nullptr
  };
  return names;
}

inline const char *EnumNamePitchMethod(PitchMethod e) {
  if (flatbuffers::IsOutRange(e, PitchMethod::schmitt, PitchMethod::yinfft)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesPitchMethod()[index];
}

}  // namespace ImpresarioSerialization

#endif  // FLATBUFFERS_GENERATED_PITCHMETHOD_IMPRESARIOSERIALIZATION_H_
